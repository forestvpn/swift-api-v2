//
// PortForwarding.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct PortForwarding: Codable, Hashable {

    public var id: UUID
    public var srcPort: Int?
    public var dstPort: Int?

    public init(id: UUID, srcPort: Int? = nil, dstPort: Int? = nil) {
        self.id = id
        self.srcPort = srcPort
        self.dstPort = dstPort
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case srcPort = "src_port"
        case dstPort = "dst_port"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encodeIfPresent(srcPort, forKey: .srcPort)
        try container.encodeIfPresent(dstPort, forKey: .dstPort)
    }
}

