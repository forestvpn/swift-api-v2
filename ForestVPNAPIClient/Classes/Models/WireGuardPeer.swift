//
// WireGuardPeer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WireGuardPeer: Codable, Hashable {

    public var pubKey: String
    public var psKey: String?
    public var endpoint: String?
    public var allowedIps: [String]?

    public init(pubKey: String, psKey: String? = nil, endpoint: String? = nil, allowedIps: [String]? = nil) {
        self.pubKey = pubKey
        self.psKey = psKey
        self.endpoint = endpoint
        self.allowedIps = allowedIps
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pubKey = "pub_key"
        case psKey = "ps_key"
        case endpoint
        case allowedIps = "allowed_ips"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pubKey, forKey: .pubKey)
        try container.encodeIfPresent(psKey, forKey: .psKey)
        try container.encodeIfPresent(endpoint, forKey: .endpoint)
        try container.encodeIfPresent(allowedIps, forKey: .allowedIps)
    }
}

