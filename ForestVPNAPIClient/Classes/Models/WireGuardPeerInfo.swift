//
// WireGuardPeerInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct WireGuardPeerInfo: Codable, Hashable {

    public var pubKey: String?
    public var user: WireGuardPeerUser?
    public var device: WireGuardPeerDevice?

    public init(pubKey: String? = nil, user: WireGuardPeerUser? = nil, device: WireGuardPeerDevice? = nil) {
        self.pubKey = pubKey
        self.user = user
        self.device = device
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pubKey = "pub_key"
        case user
        case device
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pubKey, forKey: .pubKey)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(device, forKey: .device)
    }
}

