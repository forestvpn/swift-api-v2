//
// Constraint.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Constraint: Codable, Hashable {

    public var namespace: String?
    public var relation: String?
    public var subject: [String]?

    public init(namespace: String? = nil, relation: String? = nil, subject: [String]? = nil) {
        self.namespace = namespace
        self.relation = relation
        self.subject = subject
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case namespace
        case relation
        case subject
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(namespace, forKey: .namespace)
        try container.encodeIfPresent(relation, forKey: .relation)
        try container.encodeIfPresent(subject, forKey: .subject)
    }
}

